[
    ( ".angular-cli.json"       , "file_type_angular"      ),  // angular
    ( ".angular.json"           , "file_type_angular"      ),  // angular
    ( ".codecov.yml"            , "file_type_coverage"     ),  // codecov
    ( ".eslintrc.json"          , "file_type_javascript"   ),  // javascript-lint
    ( ".eslintrc.yaml"          , "file_type_javascript"   ),  // javascript-lint
    ( ".eslintrc.yml"           , "file_type_javascript"   ),  // javascript-lint
    ( ".gitlab-ci.yml"          , "file_type_gitlab"       ),  // gitlab-ci
    ( ".php_cs.dist"            , "file_type_php"          ),  // php-cs
    ( ".stashconfig.yml"        , "file_type_bitbucket"    ),  // bitbucket-cli
    ( ".travis.yml"             , "file_type_travis"       ),  // travis-ci
    ( ".vsts-ci.yml"            , "file_type_azure"        ),  // azure-ci
    ( ".yo-rc.json"             , "file_type_yeoman"       ),  // yeoman
    ( "_gvimrc"                 , "file_type_vim"          ),  // vim-config-gui
    ( "_vimrc"                  , "file_type_vim"          ),  // vim-config
    ( "angular-cli.json"        , "file_type_angular"      ),  // angular
    ( "angular.json"            , "file_type_angular"      ),  // angular
    ( "authors"                 , "file_type_maintainers"  ),  // google-contrib
    ( "authors.rst"             , "file_type_maintainers"  ),  // ...
    ( "authors.txt"             , "file_type_maintainers"  ),  // google-contrib
    ( "azure-pipelines.yml"     , "file_type_azure"        ),  // azure-ci
    ( "bitbucket-pipelines.yml" , "file_type_bitbucket"    ),  // bitbucket-ci
    ( "bower.json"              , "file_type_bower"        ),  // bower
    ( "cakefile"                , "file_type_coffeescript" ),  // coffeescript-make
    ( "cargo.lock"              , "file_type_rust"         ),  // rust-package
    ( "cargo.toml"              , "file_type_rust"         ),  // rust-package
    ( "changelog"               , "file_type_history"      ),  // ...
    ( "changelog.md"            , "file_type_history"      ),  // ...
    ( "changelog.rst"           , "file_type_history"      ),  // python-history
    ( "changelog.txt"           , "file_type_history"      ),
    ( "changes.rst"             , "file_type_history"      ),  // python-history
    ( "cmakelists.txt"          , "file_type_makefile"     ),  // cmake
    ( "codeowners"              , "file_type_maintainers"  ),  // github-codeowners
    ( "coffeelint.json"         , "file_type_coffeescript" ),  // coffeescript-lint
    ( "composer.json"           , "file_type_php"          ),  // php-package
    ( "composer.lock"           , "file_type_php"          ),  // php-package
    ( "config"                  , "file_type_config"       ),  // ...-config
    ( "contributors"            , "file_type_maintainers"  ),  // google-contrib
    ( "copying"                 , "file_type_license"      ),  // github-license
    ( "copying.lesser"          , "file_type_license"      ),  // ...
    ( "copying.lesser.md"       , "file_type_license"      ),  // ...
    ( "copying.lesser.txt"      , "file_type_license"      ),  // ...
    ( "copying.md"              , "file_type_license"      ),  // github-license
    ( "copying.txt"             , "file_type_license"      ),  // github-license
    ( "copyright"               , "file_type_copyright"    ),
    ( "credits"                 , "file_type_maintainers"  ),  // ...
    ( "credits.md"              , "file_type_maintainers"  ),  // ...
    ( "dependabot.yml"          , "file_type_bot"          ),  // dependabot
    ( "desktop.ini"             , "file_type_windows"      ),  // windows-folder
    ( "devcontainer.json"       , "file_type_visualstudio" ),  // vscode-container
    ( "docker-compose.yaml"     , "file_type_docker"       ),  // docker-compose
    ( "docker-compose.yml"      , "file_type_docker"       ),  // docker-compose
    ( "dockerfile"              , "file_type_docker"       ),  // docker
    ( "dub.json"                , "file_type_dlang"        ),  // dlang-package
    ( "dub.sdl"                 , "file_type_dlang"        ),  // dlang-package
    ( "dub.selections.json"     , "file_type_dlang"        ),  // dlang-package
    ( "elm-package.json"        , "file_type_elm"          ),  // elm-package>=0.19
    ( "elm.json"                , "file_type_elm"          ),  // elm-package<=0.18
    ( "emakefile"               , "file_type_erlang"       ),  // erlang-make
    ( "favicon.ico"             , "file_type_favicon"      ),  // favicon
    ( "gemfile"                 , "file_type_ruby"         ),  // ruby-package
    ( "gemfile.lock"            , "file_type_ruby"         ),  // ruby-package
    ( "go.mod"                  , "file_type_go"           ),  // go-modules
    ( "go.sum"                  , "file_type_go"           ),  // go-modules
    ( "gruntfile.babel.js"      , "file_type_grunt"        ),  // gruntfile-babel
    ( "gruntfile.coffee"        , "file_type_grunt"        ),  // gruntfile-coffeescript
    ( "gruntfile.js"            , "file_type_grunt"        ),  // gruntfile-javascript
    ( "gruntfile.ls"            , "file_type_grunt"        ),  // gruntfile-livescript
    ( "gruntfile.ts"            , "file_type_grunt"        ),  // gruntfile-typescript
    ( "gulpfile.babel.js"       , "file_type_gulp"         ),  // gulpfile-babel
    ( "gulpfile.coffee"         , "file_type_gulp"         ),  // gulpfile-coffeescript
    ( "gulpfile.esm.js"         , "file_type_gulp"         ),  // gulpfile-ecmascript
    ( "gulpfile.js"             , "file_type_gulp"         ),  // gulpfile-javascript
    ( "gulpfile.ls"             , "file_type_gulp"         ),  // gulpfile-livescript
    ( "gulpfile.mjs"            , "file_type_gulp"         ),  // gulpfile-ecmascript
    ( "gulpfile.ts"             , "file_type_gulp"         ),  // gulpfile-typescript
    ( "gvimrc"                  , "file_type_vim"          ),  // vim-config-gui
    ( "history"                 , "file_type_history"      ),  // ...
    ( "history.md"              , "file_type_history"      ),  // ...
    ( "inputrc"                 , "file_type_shell"        ),  // readline=/etc/inputrc
    ( "jakefile"                , "file_type_nodejs"       ),  // nodejs-make
    ( "jakefile.js"             , "file_type_nodejs"       ),  // nodejs-make
    ( "justfile"                , "file_type_makefile"     ),  // justfile-make
    ( "licence"                 , "file_type_license"      ),  // github-license
    ( "licence.md"              , "file_type_license"      ),  // github-license
    ( "licence.txt"             , "file_type_license"      ),  // github-license
    ( "license"                 , "file_type_license"      ),  // github-license
    ( "license.md"              , "file_type_license"      ),  // github-license
    ( "license.rtf"             , "file_type_license"      ),  // microsoft-license
    ( "license.txt"             , "file_type_license"      ),  // github-license
    ( "maintainers"             , "file_type_maintainers"  ),  // ...
    ( "maintainers.md"          , "file_type_maintainers"  ),  // ...
    ( "makefile"                , "file_type_makefile"     ),  // makefile
    ( "mix.lock"                , "file_type_elixir"       ),  // elixir-package
    ( "npm-shrinkwrap.json"     , "file_type_npm"          ),  // nodejs-npm
    ( "npmrc"                   , "file_type_npm"          ),  // nodejs-npm (global/builtin)
    ( "owners"                  , "file_type_maintainers"  ),  // google-contrib
    ( "package-lock.json"       , "file_type_npm"          ),  // nodejs-npm
    ( "package.json"            , "file_type_npm"          ),  // nodejs-npm
    ( "package.pins"            , "file_type_swift"        ),  // swift-package
    ( "phpunit"                 , "file_type_php"          ),  // php-unit
    ( "phpunit.xml"             , "file_type_php"          ),  // php-unit
    ( "phpunit.xml.dist"        , "file_type_php"          ),  // php-unit
    ( "phpunit.xsd"             , "file_type_php"          ),  // php-unit
    ( "pipfile"                 , "file_type_python"       ),  // python-package
    ( "pipfile.lock"            , "file_type_python"       ),  // python-package
    ( "procfile"                , "file_type_heroku"       ),  // heroku-procfile
    ( "pubspec.lock"            , "file_type_dart"         ),  // dart-package
    ( "pubspec.yaml"            , "file_type_dart"         ),  // dart-package
    ( "rakefile"                , "file_type_ruby"         ),  // ruby-make
    ( "readme"                  , "file_type_markdown"     ),  // github-readme
    ( "rebar.config"            , "file_type_erlang"       ),  // erlang-package
    ( "rebar.lock"              , "file_type_erlang"       ),  // erlang-package
    ( "requirements.txt"        , "file_type_python"       ),  // python-package
    ( "rust-toolchain"          , "file_type_rust"         ),  // rust-version
    ( "rust-toolchain.toml"     , "file_type_rust"         ),  // rust-version
    ( "security.md"             , "file_type_security"     ),  // github-security
    ( "stack.yaml"              , "file_type_haskell"      ),  // haskell-stack
    ( "thumbs.db"               , "file_type_windows"      ),  // windows-thumbnails
    ( "todo"                    , "file_type_todo"         ),  // ...
    ( "tslint.json"             , "file_type_typescript"   ),  // typescript-lint
    ( "tslint.yaml"             , "file_type_typescript"   ),  // typescript-lint
    ( "tslint.yml"              , "file_type_typescript"   ),  // typescript-lint
    ( "vagrantfile"             , "file_type_vagrant"      ),  // vagrant
    ( "vimrc"                   , "file_type_vim"          ),  // vim-config
    ( "vue.config.js"           , "file_type_vuejs"        ),  // vue-cli
    ( "webpack.config.babel.js" , "file_type_webpack"      ),  // webpack-config-babel
    ( "webpack.config.coffee"   , "file_type_webpack"      ),  // webpack-config-coffeescript
    ( "webpack.config.js"       , "file_type_webpack"      ),  // webpack-config-javascript
    ( "webpack.config.ts"       , "file_type_webpack"      ),  // webpack-config-typescript
//    ( "jenkinsfile"         , "file_type_jenkins"        ),
]
